@startuml sequenceDiagram

title Sequence diagram for adding Recipe to Cookbook

    actor User1
    User1 -> AppController: Click on "add new recipe" button
    AppController -> AddRecipeController: Switches scene to Add Recipe
    AddRecipeController -> "CookbookAccess : RemoteCookbookAccess": setCookbookAccess(CookbookAccess cookbookAccess)
    User1 -> AddRecipeController : Click on "add ingredient" button
    AddRecipeController -> User1 : new ingredient input field
    User1 -> AddRecipeController : Fills in recipe fields and clicks "add recipe" button
    AddRecipeController -> "CookbookAccess : RemoteCookbookAccess" : addRecipe(recipe obejct) 
    "CookbookAccess : RemoteCookbookAccess" -> RESTAPI: POST(localhost:8080/api/cookbook) body: json recipe
    RESTAPI -> "remote-cookbook.json file" : addRecipe(recipe as json)
    "remote-cookbook.json file" -> RESTAPI: true (Sucessfully added recipe)
    RESTAPI -> "CookbookAccess : RemoteCookbookAccess": HTTP response
    "CookbookAccess : RemoteCookbookAccess" -> AddRecipeController: true (does not throw exception)
    AddRecipeController -> AppController : switchToMainScene(e)

    AppController -> "CookbookAccess : RemoteCookbookAccess": initialize()
    "CookbookAccess : RemoteCookbookAccess" -> RESTAPI: fetchCookbook()
    RESTAPI -> "remote-cookbook.json file" : getCookbook()
    "remote-cookbook.json file" -> RESTAPI: Cookbook object
    RESTAPI -> "CookbookAccess : RemoteCookbookAccess": HTTP response
    "CookbookAccess : RemoteCookbookAccess" -> AppController: sets this.cookbook attribute to the fetched cookbook
    AppController -> User1: visualisation over current Cookbook with the new recipe
    
@enduml